---
# Control the output format, use 'plain` or 'text' for plain text output, use 'json' for JSON format
# output, and use 'custom' for user defined format
# This only affect the content in MSG part of a syslog message. The default is 'json'.
mode: custom

# Set the priority of syslog message, it is a combination of the syslog facility and severity.
# The default value of severity is LOG_CRIT, and default value of facility is LOG_USER
# Avaiable values of severity are:
#  From /usr/include/sys/syslog.h.
#  These are the same on Linux, BSD, and OS X.
#    EMERG
#    ALERT
#    CRIT
#    ERR
#    WARNING
#    NOTICE
#    INFO
#    DEBUG
severity: CRIT

# Available values of facility are:
#  From /usr/include/sys/syslog.h.
#  These are the same up to LOG_FTP on Linux, BSD, and OS X.
#    KERN
#    USER
#    MAIL
#    DAEMON
#    AUTH
#    SYSLOG
#    LPR
#    NEWS
#    UUCP
#    CRON
#    AUTHPRIV
#    FTP
#
#    LOCAL0
#    LOCAL1
#    LOCAL2
#    LOCAL3
#    LOCAL4
#    LOCAL5
#    LOCAL6
#    LOCAL7
facility: USER

# Add labels to be included in the message send to syslog
# Note that "alertname", "severity", "staus" and "time" are always included
labels:
  - env
  - instance

# Add annotations to be included in the message send to syslog
# NOTE: If an annotation has the same name as a label, it will overwrite the value of that label
# e.g., in this configuration sample, only "instance" from annotations will be add to the message
annotations:
  - value
  - summary
  - description
  - instance

# Define a customized format to build alerts to syslog messages
# If custom format is enabled, both 'labels' and 'annotation' are ignored.
custom:
  # delimiter is the string used to separate different sections, it can be of one or more characters
  # long, but keep in mind to choose characters that won't appear in alert itself.
  delimiter: "||"
  
  # replaceWhitespace is the string used to replace all whitespaces in content, if left empty, the
  # whitespaces are kept unchanged.
  replaceWhitespace: "_"

  # severityes is the custom sverity definitions of alert levels, the severity section should be write
  # to labels of alerts
  severities:
    # Wheather parse resolved status of the alert as an extra severity, default is false, this might be
    # useful if you want to treat resolved as a special severity
    includeResolved: false
    # Type of the severity section, allowed values are "label" and "annotation"
    type: "annotation"
    # The key name of severity section in alert's labels, e.g., "level"
    key: "severity"
    # Wheather output severity as the original format or a digit defined by following rules
    # Accept values are: "number", or "string", default is "string"
    mode: number
    # levels defines a map from values of severity labels to digits, it is ignored if mode is "string"
    # if match fails, the value will be set to -1
    levels:
    - name: "critical"
      value: 4
    - name: "warning"
      value: 2
    - name: "notice"
      value: 1

  # sections are the custom defined values in the message, they are ordered the same as in config file
  # a section has these items:
  #   - join: wheather join multiple columns to one string, if set to "true", columns are joint by the
  #        delimiter to one string, default is false
  #   - demiliter: the string used to join columns in this section, ignored if "join" is not "true"
  #   - columns: the actual data columns in alerts, it is a list of column, if "join" is not "true",
  #        only the first column in the list is used for this section
  # a column has these items:
  #   - type: the type of this section, could be either "const", "label" or "annotation", where:
  #         * const is a constitute value
  #         * label is a value from one of the alert's labels
  #         * annotation is a value from one of the alert's annotations
  #         * time: the time of alert occurrence, in UNIX timestamp format
  #         * instance: the Prometheus' instance label, can optionally strip port number from it
  #         * status: the status of the alert, e.g., firing and resolved
  #         * severity: the severity pared with severities configuration
  #   - value: the constitute value to be used, it is ignored if the type is not "const", if you want
  #         keep the section with empty value, use " " (whitespace) for the value.
  #   - key: name of the key for label or annotation, it is ignored if the type is "const"
  #   - numeric: if set to true, the status will show as numeric in messages, default is false. it is
  #         ignored if the type is not "status"
  sections:
  - columns:
    - type: const
      value: "AlertManager"
  - columns:
    - type: const
      value: " "
  # if join is true, the columns are joint with the "delimiter" into one string, otherwise only the
  # first item in columns is used
  - delimiter: "-"
    columns:
    - type: label
      key: "env"
    - type: instance
      stripPort: true
  - columns:
    - type: label
      key: "alertname"
  - columns:
    - type: label
      key: "service"
  - columns:
    - type: annotation
      key: "instance"
  - columns:
    - type: label
      key: "severity"
  - columns:
    - type: annotation
      key: "summary"
  - columns:
    - type: time
