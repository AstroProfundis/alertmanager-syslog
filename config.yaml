---
# Control the output format, use 'plain` or 'text' for plain text output, use 'json' for JSON format
# output, and use 'custom' for user defined format
# This only affect the content in MSG part of a syslog message. The default is 'json'.
mode: custom

# Set the priority of syslog message, it is a combination of the syslog facility and severity.
# The default value of severity is LOG_CRIT, and default value of facility is LOG_USER
# Avaiable values of severity are:
#  From /usr/include/sys/syslog.h.
#  These are the same on Linux, BSD, and OS X.
#    EMERG
#    ALERT
#    CRIT
#    ERR
#    WARNING
#    NOTICE
#    INFO
#    DEBUG
severity: CRIT

# Available values of facility are:
#  From /usr/include/sys/syslog.h.
#  These are the same up to LOG_FTP on Linux, BSD, and OS X.
#    KERN
#    USER
#    MAIL
#    DAEMON
#    AUTH
#    SYSLOG
#    LPR
#    NEWS
#    UUCP
#    CRON
#    AUTHPRIV
#    FTP
#
#    LOCAL0
#    LOCAL1
#    LOCAL2
#    LOCAL3
#    LOCAL4
#    LOCAL5
#    LOCAL6
#    LOCAL7
facility: USER

# Add labels to be included in the message send to syslog
# Note that "alertname", "severity", "staus" and "time" are always included
labels:
  - env
  - instance

# Add annotations to be included in the message send to syslog
# NOTE: If an annotation has the same name as a label, it will overwrite the value of that label
# e.g., in this configuration sample, only "instance" from annotations will be add to the message
annotations:
  - value
  - summary
  - description
  - instance

# Define a customized format to build alerts to syslog messages
# If custom format is enabled, both 'labels' and 'annotation' are ignored.
custom:
  # delimiter is the string used to separate different sections, it can be of one or more characters
  # long, but keep in mind to choose characters that won't appear in alert itself.
  delimiter: "||"

  # sections are the custom defined values in the message, they are ordered the same as in config file
  # a section has these items:
  #   - type: the type of this section, could be either "const", "label" or "annontation", where:
  #         * const is a constitute value
  #         * label is a value from one of the alert's labels
  #         * annontation is a value from one of the alert's annotations
  #   - value: the constitute value to be used, it is ignored if the type is not "const", if you want
  #         keep the section with empty value, use " " (whitespace) for the value.
  #   - key: name of the key for label or annotation, it is ignored if the type is "const"
  #   - time: the time of alert occurrence, in UNIX timestamp format
  sections:
    - type: const
      value: "AlertManager"
    - type: const
      value: " "
    - type: label
      key: "instance"
    - type: label
      key: "alertname"
    - type: label
      key: "service"
    - type: annotation
      key: "instance"
    - type: label
      key: "severity"
    - type: annotation
      key: "summary"
    - type: time
